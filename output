

## **1. agent/agent.py – Execution Output**

Run:
```bash
python agent/agent.py
```

** Terminal Output:**

```json
{'user_id': 1, 'action': 'recommend_product', 'engagement_score': 0.82}
```

**Explanation:**

* The agent uses mock KumoRFM predictions.
* Returns `action` and `engagement_score`.

---

## **2. kumo/kumo\_client.py – Execution Output**

Run:

```bash
python kumo/kumo_client.py
```

**Sample Terminal Output:**

```json
{'engagement_score': 0.67, 'recommended_action': 'send_message'}
```

**Explanation:**

* Mock prediction generated randomly.
* Returns `engagement_score` (0–1) and `recommended_action`.

---

## **3. app/main.py – Flask API Output**

Run:

```bash
python app/main.py
```

**Terminal Output:**

```
 * Serving Flask app 'main'
 * Debug mode: on
 * Running on http://127.0.0.1:5000
```

### **Test API Using curl**

```bash
curl http://127.0.0.1:5000/recommend/1
```

**Output:**

```json
{
  "user_id": 1,
  "action": "recommend_product",
  "engagement_score": 0.82
}
```

```bash
curl http://127.0.0.1:5000/recommend/2
```

**Output:**

```json
{
  "user_id": 2,
  "action": "send_message",
  "engagement_score": 0.45
}
```

```bash
curl http://127.0.0.1:5000/recommend/99
```

**Output:**

```json
{
  "error": "User not found"
}
```

**Explanation:**

* API returns personalized recommendation per user ID.
* Handles invalid user IDs gracefully.

---

## **4. tests/test\_agent.py – Unit Test Output**

Run:

```bash
pytest tests/
```

**Output:**

```
============================= test session starts ==============================
platform win32 -- Python 3.11.6, pytest-7.4.2
collected 1 item

tests/test_agent.py .                                                  [100%]

============================== 1 passed in 0.12s ===============================
```

**Explanation:**

* Test checks the agent’s recommendation structure.
* Confirms `action` and `engagement_score` are returned correctly.

---

## **5. agent/utils.py –  Output**

Test usage:

```python
from agent.utils import validate_user_data, days_since_last_active, format_recommendation_output

user_data = {
    "user_id": 1,
    "age": 25,
    "gender": "M",
    "last_active": "2025-08-10",
    "interactions": 15,
    "purchases": 2
}

print(validate_user_data(user_data))
print(days_since_last_active(user_data["last_active"]))
print(format_recommendation_output(user_data["user_id"], "recommend_product", 0.82))
```

** Output:**

```
True
7
{'user_id': 1, 'action': 'recommend_product', 'engagement_score': 0.82}
```

---

## **6. Summary of Execution**

| File                  | Command                                                         | Output                                                                             |
| --------------------- | --------------------------------------------------------------- | ---------------------------------------------------------------------------------- |
| `agent/agent.py`      | `python agent/agent.py`                                         | `{'user_id': 1, 'action': 'recommend_product', 'engagement_score': 0.82}`          |
| `kumo/kumo_client.py` | `python kumo/kumo_client.py`                                    | `{'engagement_score': 0.67, 'recommended_action': 'send_message'}`                 |
| `app/main.py`         | `python app/main.py` + `curl http://127.0.0.1:5000/recommend/1` | `{'user_id': 1, 'action': 'recommend_product', 'engagement_score': 0.82}`          |
| `tests/test_agent.py` | `pytest tests/`                                                 | `1 passed`                                                                         |
| `agent/utils.py`      | Direct run test snippet                                         | `True, 7, {'user_id': 1, 'action': 'recommend_product', 'engagement_score': 0.82}` |




